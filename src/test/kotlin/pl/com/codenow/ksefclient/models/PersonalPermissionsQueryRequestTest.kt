/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.models.PersonalPermissionsQueryRequest
import pl.com.codenow.ksefclient.models.PermissionState
import pl.com.codenow.ksefclient.models.PersonalPermissionType
import pl.com.codenow.ksefclient.models.PersonalPermissionsContextIdentifier
import pl.com.codenow.ksefclient.models.PersonalPermissionsTargetIdentifier

class PersonalPermissionsQueryRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PersonalPermissionsQueryRequest
        //val modelInstance = PersonalPermissionsQueryRequest()

        // to test the property `contextIdentifier` - Identyfikator kontekstu uprawnienia (dla uprawnień nadanych podmiotom do obsługi faktur). | Type | Value | | --- | --- | | Nip | 10 cyfrowy numer NIP |
        should("test contextIdentifier") {
            // uncomment below to test the property
            //modelInstance.contextIdentifier shouldBe ("TODO")
        }

        // to test the property `targetIdentifier` - Identyfikator podmiotu docelowego (dla uprawnień pośrednich). | Type | Value | | --- | --- | | Nip | 10 cyfrowy numer NIP | | AllPartners | Identyfikator oznaczający, że uprawnienie nadane w sposób pośredni jest typu generalnego |
        should("test targetIdentifier") {
            // uncomment below to test the property
            //modelInstance.targetIdentifier shouldBe ("TODO")
        }

        // to test the property `permissionTypes` - Możliwe uprawnienia do filtrowania.
        should("test permissionTypes") {
            // uncomment below to test the property
            //modelInstance.permissionTypes shouldBe ("TODO")
        }

        // to test the property `permissionState` - Stan uprawnienia.  | Type | Value | | --- | --- | | Active | Uprawnienia aktywne | | Inactive | Uprawnienia nieaktywne, nadane w sposób pośredni |
        should("test permissionState") {
            // uncomment below to test the property
            //modelInstance.permissionState shouldBe ("TODO")
        }

    }
}
