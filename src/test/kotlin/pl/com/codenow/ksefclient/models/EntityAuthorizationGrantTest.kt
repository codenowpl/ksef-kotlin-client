/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.models.EntityAuthorizationGrant
import pl.com.codenow.ksefclient.models.EntityAuthorizationsAuthorIdentifierType
import pl.com.codenow.ksefclient.models.EntityAuthorizationsAuthorizedEntityIdentifierType
import pl.com.codenow.ksefclient.models.EntityAuthorizationsAuthorizingEntityIdentifierType
import pl.com.codenow.ksefclient.models.InvoicePermissionType

class EntityAuthorizationGrantTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EntityAuthorizationGrant
        //val modelInstance = EntityAuthorizationGrant()

        // to test the property `id` - Identyfikator uprawnienia.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `authorizedEntityIdentifier` - Identyfikator podmiotu uprawnionego.
        should("test authorizedEntityIdentifier") {
            // uncomment below to test the property
            //modelInstance.authorizedEntityIdentifier shouldBe ("TODO")
        }

        // to test the property `authorizedEntityIdentifierType` - Typ identyfikatora podmiotu uprawnionego.
        should("test authorizedEntityIdentifierType") {
            // uncomment below to test the property
            //modelInstance.authorizedEntityIdentifierType shouldBe ("TODO")
        }

        // to test the property `authorizingEntityIdentifier` - Identyfikator podmiotu uprawniającego.
        should("test authorizingEntityIdentifier") {
            // uncomment below to test the property
            //modelInstance.authorizingEntityIdentifier shouldBe ("TODO")
        }

        // to test the property `authorizingEntityIdentifierType` - Typ identyfikatora podmiotu uprawniającego.
        should("test authorizingEntityIdentifierType") {
            // uncomment below to test the property
            //modelInstance.authorizingEntityIdentifierType shouldBe ("TODO")
        }

        // to test the property `authorizationScope` - Uprawnienie.
        should("test authorizationScope") {
            // uncomment below to test the property
            //modelInstance.authorizationScope shouldBe ("TODO")
        }

        // to test the property `description` - Opis uprawnienia.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `startDate` - Data rozpoczęcia obowiązywania uprawnienia.
        should("test startDate") {
            // uncomment below to test the property
            //modelInstance.startDate shouldBe ("TODO")
        }

        // to test the property `authorIdentifier` - Identyfikator osoby nadającej uprawnienie.
        should("test authorIdentifier") {
            // uncomment below to test the property
            //modelInstance.authorIdentifier shouldBe ("TODO")
        }

        // to test the property `authorIdentifierType` - Typ identyfikatora osoby nadającej uprawnienie.
        should("test authorIdentifierType") {
            // uncomment below to test the property
            //modelInstance.authorIdentifierType shouldBe ("TODO")
        }

    }
}
