/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.models.IndirectPermissionsGrantRequest
import pl.com.codenow.ksefclient.models.IndirectPermissionType
import pl.com.codenow.ksefclient.models.IndirectPermissionsSubjectIdentifier
import pl.com.codenow.ksefclient.models.IndirectPermissionsTargetIdentifier

class IndirectPermissionsGrantRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of IndirectPermissionsGrantRequest
        //val modelInstance = IndirectPermissionsGrantRequest()

        // to test the property `subjectIdentifier` - Identyfikator osoby fizycznej. | Type | Value | | --- | --- | | Nip | 10 cyfrowy numer NIP | | Pesel | 11 cyfrowy numer PESEL | | Fingerprint | Odcisk palca certyfikatu |
        should("test subjectIdentifier") {
            // uncomment below to test the property
            //modelInstance.subjectIdentifier shouldBe ("TODO")
        }

        // to test the property `permissions` - Lista nadawanych uprawnień. Każda wartość może wystąpić tylko raz.
        should("test permissions") {
            // uncomment below to test the property
            //modelInstance.permissions shouldBe ("TODO")
        }

        // to test the property `description` - Opis nadawanych uprawnień.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `targetIdentifier` - Identyfikator podmiotu, w którego kontekście chcemy pośrednio nadać uprawnienia. W przypadku nadawania uprawnienia generalnego, pole to powinno mieć wartość null. | Type | Value | | --- | --- | | Nip | 10 cyfrowy numer NIP | | AllPartners | Identyfikator oznaczający, że uprawnienie nadane w sposób pośredni jest typu generalnego |
        should("test targetIdentifier") {
            // uncomment below to test the property
            //modelInstance.targetIdentifier shouldBe ("TODO")
        }

    }
}
