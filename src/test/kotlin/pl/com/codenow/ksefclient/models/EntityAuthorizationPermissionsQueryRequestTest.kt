/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.models.EntityAuthorizationPermissionsQueryRequest
import pl.com.codenow.ksefclient.models.EntityAuthorizationsAuthorizedEntityIdentifier
import pl.com.codenow.ksefclient.models.EntityAuthorizationsAuthorizingEntityIdentifier
import pl.com.codenow.ksefclient.models.InvoicePermissionType
import pl.com.codenow.ksefclient.models.QueryType

class EntityAuthorizationPermissionsQueryRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EntityAuthorizationPermissionsQueryRequest
        //val modelInstance = EntityAuthorizationPermissionsQueryRequest()

        // to test the property `queryType` - Typ zapytania. | Type | Value | | --- | --- | | Granted | Uprawnienia nadane innym podmiotom | | Received | Uprawnienia otrzymane od innych podmiotów |
        should("test queryType") {
            // uncomment below to test the property
            //modelInstance.queryType shouldBe ("TODO")
        }

        // to test the property `authorizingIdentifier` - Identyfikator podmiotu uprawniającego. | Type | Value | | --- | --- | | Nip | 10 cyfrowy numer NIP |
        should("test authorizingIdentifier") {
            // uncomment below to test the property
            //modelInstance.authorizingIdentifier shouldBe ("TODO")
        }

        // to test the property `authorizedIdentifier` - Identyfikator podmiotu uprawnionego. | Type | Value | | --- | --- | | Nip | 10 cyfrowy numer NIP | | PeppolId | Identyfikator dostawcy usług Peppol |
        should("test authorizedIdentifier") {
            // uncomment below to test the property
            //modelInstance.authorizedIdentifier shouldBe ("TODO")
        }

        // to test the property `permissionTypes` - Możliwe uprawnienia do filtrowania.
        should("test permissionTypes") {
            // uncomment below to test the property
            //modelInstance.permissionTypes shouldBe ("TODO")
        }

    }
}
