/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.models.CertificateListItem
import pl.com.codenow.ksefclient.models.CertificateListItemStatus
import pl.com.codenow.ksefclient.models.KsefCertificateType

class CertificateListItemTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CertificateListItem
        //val modelInstance = CertificateListItem()

        // to test the property `certificateSerialNumber` - Numer seryjny certyfikatu (w formacie szesnastkowym).
        should("test certificateSerialNumber") {
            // uncomment below to test the property
            //modelInstance.certificateSerialNumber shouldBe ("TODO")
        }

        // to test the property `name` - Nazwa własna certyfikatu.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `type` - Typ certyfikatu. | Wartość | Opis | | --- | --- | | Authentication | Certyfikat używany do uwierzytelnienia w systemie. | | Offline | Certyfikat używany wyłącznie do potwierdzania autentyczności wystawcy i integralności faktury w trybie offline | 
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `commonName` - Nazwa powszechna (CN) podmiotu, dla którego wystawiono certyfikat.
        should("test commonName") {
            // uncomment below to test the property
            //modelInstance.commonName shouldBe ("TODO")
        }

        // to test the property `status` - Status certyfikatu. | Wartość | Opis | | --- | --- | | Active | Certyfikat jest aktywny i może zostać użyty do uwierzytelnienia lub realizacji operacji w trybie offline (w zależności od typu certyfikatu). | | Blocked | Certyfikat został zablokowany i nie może zostać użyty do uwierzytelnienia i realizacji operacji w trybie offline.            Status przejściowy do czasu zakończenia procesu unieważniania. | | Revoked | Certyfikat został unieważniony i nie może zostać użyty do uwierzytelnienia i realizacji operacji w trybie offline. | | Expired | Certyfikat wygasł i nie może zostać użyty do uwierzytelnienia i realizacji operacji w trybie offline. | 
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `subjectIdentifier` - Identyfikator podmiotu, dla którego wystawiono certyfikat.
        should("test subjectIdentifier") {
            // uncomment below to test the property
            //modelInstance.subjectIdentifier shouldBe ("TODO")
        }

        // to test the property `subjectIdentifierType` - Typ identyfikatora podmiotu, dla którego wystawiono certyfikat.
        should("test subjectIdentifierType") {
            // uncomment below to test the property
            //modelInstance.subjectIdentifierType shouldBe ("TODO")
        }

        // to test the property `validFrom` - Data rozpoczęcia ważności certyfikatu.
        should("test validFrom") {
            // uncomment below to test the property
            //modelInstance.validFrom shouldBe ("TODO")
        }

        // to test the property `validTo` - Data wygaśnięcia certyfikatu.
        should("test validTo") {
            // uncomment below to test the property
            //modelInstance.validTo shouldBe ("TODO")
        }

        // to test the property `lastUseDate` - Data ostatniego użycia certyfikatu.
        should("test lastUseDate") {
            // uncomment below to test the property
            //modelInstance.lastUseDate shouldBe ("TODO")
        }

    }
}
