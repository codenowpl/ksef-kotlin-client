/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.apis.WyszukiwanieNadanychUprawnieKsefApi
import pl.com.codenow.ksefclient.models.EntityAuthorizationPermissionsQueryRequest
import pl.com.codenow.ksefclient.models.EuEntityPermissionsQueryRequest
import pl.com.codenow.ksefclient.models.ExceptionResponse
import pl.com.codenow.ksefclient.models.PersonPermissionsQueryRequest
import pl.com.codenow.ksefclient.models.PersonalPermissionsQueryRequest
import pl.com.codenow.ksefclient.models.QueryEntityAuthorizationPermissionsResponse
import pl.com.codenow.ksefclient.models.QueryEntityRolesResponse
import pl.com.codenow.ksefclient.models.QueryEuEntityPermissionsResponse
import pl.com.codenow.ksefclient.models.QueryPersonPermissionsResponse
import pl.com.codenow.ksefclient.models.QueryPersonalPermissionsResponse
import pl.com.codenow.ksefclient.models.QuerySubordinateEntityRolesResponse
import pl.com.codenow.ksefclient.models.QuerySubunitPermissionsResponse
import pl.com.codenow.ksefclient.models.SubordinateEntityRolesQueryRequest
import pl.com.codenow.ksefclient.models.SubunitPermissionsQueryRequest

class WyszukiwanieNadanychUprawnieKsefApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WyszukiwanieNadanychUprawnieKsefApi
        //val apiInstance = WyszukiwanieNadanychUprawnieKsefApi()

        // to test apiV2PermissionsQueryAuthorizationsGrantsPost
        should("test apiV2PermissionsQueryAuthorizationsGrantsPost") {
            // uncomment below to test apiV2PermissionsQueryAuthorizationsGrantsPost
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val entityAuthorizationPermissionsQueryRequest : EntityAuthorizationPermissionsQueryRequest = {"authorizedIdentifier":{"type":"Nip","value":"7762811692"},"queryType":"Granted","permissionTypes":["SelfInvoicing","TaxRepresentative","RRInvoicing"]} // EntityAuthorizationPermissionsQueryRequest | 
            //val result : QueryEntityAuthorizationPermissionsResponse = apiInstance.apiV2PermissionsQueryAuthorizationsGrantsPost(pageOffset, pageSize, entityAuthorizationPermissionsQueryRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2PermissionsQueryEntitiesRolesGet
        should("test apiV2PermissionsQueryEntitiesRolesGet") {
            // uncomment below to test apiV2PermissionsQueryEntitiesRolesGet
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val result : QueryEntityRolesResponse = apiInstance.apiV2PermissionsQueryEntitiesRolesGet(pageOffset, pageSize)
            //result shouldBe ("TODO")
        }

        // to test apiV2PermissionsQueryEuEntitiesGrantsPost
        should("test apiV2PermissionsQueryEuEntitiesGrantsPost") {
            // uncomment below to test apiV2PermissionsQueryEuEntitiesGrantsPost
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val euEntityPermissionsQueryRequest : EuEntityPermissionsQueryRequest = {"vatUeIdentifier":"DE123456789012","permissionTypes":["VatUeManage","Introspection"]} // EuEntityPermissionsQueryRequest | 
            //val result : QueryEuEntityPermissionsResponse = apiInstance.apiV2PermissionsQueryEuEntitiesGrantsPost(pageOffset, pageSize, euEntityPermissionsQueryRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2PermissionsQueryPersonalGrantsPost
        should("test apiV2PermissionsQueryPersonalGrantsPost") {
            // uncomment below to test apiV2PermissionsQueryPersonalGrantsPost
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val personalPermissionsQueryRequest : PersonalPermissionsQueryRequest =  // PersonalPermissionsQueryRequest | 
            //val result : QueryPersonalPermissionsResponse = apiInstance.apiV2PermissionsQueryPersonalGrantsPost(pageOffset, pageSize, personalPermissionsQueryRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2PermissionsQueryPersonsGrantsPost
        should("test apiV2PermissionsQueryPersonsGrantsPost") {
            // uncomment below to test apiV2PermissionsQueryPersonsGrantsPost
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val personPermissionsQueryRequest : PersonPermissionsQueryRequest = {"authorIdentifier":{"type":"Nip","value":"7762811692"},"permissionTypes":["CredentialsManage","CredentialsRead","InvoiceWrite"],"permissionState":"Active","queryType":"PermissionsInCurrentContext"} // PersonPermissionsQueryRequest | 
            //val result : QueryPersonPermissionsResponse = apiInstance.apiV2PermissionsQueryPersonsGrantsPost(pageOffset, pageSize, personPermissionsQueryRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2PermissionsQuerySubordinateEntitiesRolesPost
        should("test apiV2PermissionsQuerySubordinateEntitiesRolesPost") {
            // uncomment below to test apiV2PermissionsQuerySubordinateEntitiesRolesPost
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val subordinateEntityRolesQueryRequest : SubordinateEntityRolesQueryRequest = {"subordinateEntityIdentifier":{"type":"Nip","value":"7762811692"}} // SubordinateEntityRolesQueryRequest | 
            //val result : QuerySubordinateEntityRolesResponse = apiInstance.apiV2PermissionsQuerySubordinateEntitiesRolesPost(pageOffset, pageSize, subordinateEntityRolesQueryRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2PermissionsQuerySubunitsGrantsPost
        should("test apiV2PermissionsQuerySubunitsGrantsPost") {
            // uncomment below to test apiV2PermissionsQuerySubunitsGrantsPost
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników.
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val subunitPermissionsQueryRequest : SubunitPermissionsQueryRequest = {"subunitIdentifier":{"type":"InternalId","value":"7762811692-12345"}} // SubunitPermissionsQueryRequest | 
            //val result : QuerySubunitPermissionsResponse = apiInstance.apiV2PermissionsQuerySubunitsGrantsPost(pageOffset, pageSize, subunitPermissionsQueryRequest)
            //result shouldBe ("TODO")
        }

    }
}
