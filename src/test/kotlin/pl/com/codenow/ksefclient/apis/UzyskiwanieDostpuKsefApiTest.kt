/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.apis.UzyskiwanieDostpuKsefApi
import pl.com.codenow.ksefclient.models.AuthenticationChallengeResponse
import pl.com.codenow.ksefclient.models.AuthenticationInitResponse
import pl.com.codenow.ksefclient.models.AuthenticationOperationStatusResponse
import pl.com.codenow.ksefclient.models.AuthenticationTokenRefreshResponse
import pl.com.codenow.ksefclient.models.AuthenticationTokensResponse
import pl.com.codenow.ksefclient.models.ExceptionResponse
import pl.com.codenow.ksefclient.models.InitTokenAuthenticationRequest

class UzyskiwanieDostpuKsefApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UzyskiwanieDostpuKsefApi
        //val apiInstance = UzyskiwanieDostpuKsefApi()

        // to test apiV2AuthChallengePost
        should("test apiV2AuthChallengePost") {
            // uncomment below to test apiV2AuthChallengePost
            //val result : AuthenticationChallengeResponse = apiInstance.apiV2AuthChallengePost()
            //result shouldBe ("TODO")
        }

        // to test apiV2AuthKsefTokenPost
        should("test apiV2AuthKsefTokenPost") {
            // uncomment below to test apiV2AuthKsefTokenPost
            //val initTokenAuthenticationRequest : InitTokenAuthenticationRequest = {"challenge":"20250625-CR-2FDC223000-C2BFC98A9C-4E","contextIdentifier":{"type":"Nip","value":"5265877635"},"encryptedToken":"..."} // InitTokenAuthenticationRequest | 
            //val result : AuthenticationInitResponse = apiInstance.apiV2AuthKsefTokenPost(initTokenAuthenticationRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2AuthReferenceNumberGet
        should("test apiV2AuthReferenceNumberGet") {
            // uncomment below to test apiV2AuthReferenceNumberGet
            //val referenceNumber : kotlin.String = referenceNumber_example // kotlin.String | Numer referencyjny tokena otrzymanego przy inicjalizacji operacji uwierzytelniania.
            //val result : AuthenticationOperationStatusResponse = apiInstance.apiV2AuthReferenceNumberGet(referenceNumber)
            //result shouldBe ("TODO")
        }

        // to test apiV2AuthTokenRedeemPost
        should("test apiV2AuthTokenRedeemPost") {
            // uncomment below to test apiV2AuthTokenRedeemPost
            //val result : AuthenticationTokensResponse = apiInstance.apiV2AuthTokenRedeemPost()
            //result shouldBe ("TODO")
        }

        // to test apiV2AuthTokenRefreshPost
        should("test apiV2AuthTokenRefreshPost") {
            // uncomment below to test apiV2AuthTokenRefreshPost
            //val result : AuthenticationTokenRefreshResponse = apiInstance.apiV2AuthTokenRefreshPost()
            //result shouldBe ("TODO")
        }

        // to test apiV2AuthXadesSignaturePost
        should("test apiV2AuthXadesSignaturePost") {
            // uncomment below to test apiV2AuthXadesSignaturePost
            //val body : kotlin.String = <?xml version="1.0" encoding="utf-8"?>
<AuthTokenRequest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://ksef.mf.gov.pl/auth/token/2.0">
    <Challenge>20250625-CR-20F5EE4000-DA48AE4124-46</Challenge>
    <ContextIdentifier>
        <Nip>5265877635</Nip>
    </ContextIdentifier>
    <SubjectIdentifierType>certificateSubject</SubjectIdentifierType>
    <ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#" Id="Signature-9707709">
        <!-- Tu powinien być podpis XAdES -->
    </ds:Signature>
</AuthTokenRequest> // kotlin.String | 
            //val verifyCertificateChain : kotlin.Boolean = true // kotlin.Boolean | Wymuszenie weryfikacji zaufania łańcucha certyfikatu wraz ze sprawdzeniem statusu certyfikatu (OCSP/CRL) na środowiskach które umożliwiają wykorzystanie samodzielnie wygenerowanych certyfikatów.
            //val result : AuthenticationInitResponse = apiInstance.apiV2AuthXadesSignaturePost(body, verifyCertificateChain)
            //result shouldBe ("TODO")
        }

    }
}
