/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.apis.CertyfikatyKsefApi
import pl.com.codenow.ksefclient.models.CertificateEnrollmentDataResponse
import pl.com.codenow.ksefclient.models.CertificateEnrollmentStatusResponse
import pl.com.codenow.ksefclient.models.CertificateLimitsResponse
import pl.com.codenow.ksefclient.models.EnrollCertificateRequest
import pl.com.codenow.ksefclient.models.EnrollCertificateResponse
import pl.com.codenow.ksefclient.models.ExceptionResponse
import pl.com.codenow.ksefclient.models.QueryCertificatesRequest
import pl.com.codenow.ksefclient.models.QueryCertificatesResponse
import pl.com.codenow.ksefclient.models.RetrieveCertificatesRequest
import pl.com.codenow.ksefclient.models.RetrieveCertificatesResponse
import pl.com.codenow.ksefclient.models.RevokeCertificateRequest

class CertyfikatyKsefApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CertyfikatyKsefApi
        //val apiInstance = CertyfikatyKsefApi()

        // to test apiV2CertificatesCertificateSerialNumberRevokePost
        should("test apiV2CertificatesCertificateSerialNumberRevokePost") {
            // uncomment below to test apiV2CertificatesCertificateSerialNumberRevokePost
            //val certificateSerialNumber : kotlin.String = certificateSerialNumber_example // kotlin.String | Numer seryjny certyfikatu (w formacie szesnastkowym).
            //val revokeCertificateRequest : RevokeCertificateRequest =  // RevokeCertificateRequest | 
            //apiInstance.apiV2CertificatesCertificateSerialNumberRevokePost(certificateSerialNumber, revokeCertificateRequest)
        }

        // to test apiV2CertificatesEnrollmentsDataGet
        should("test apiV2CertificatesEnrollmentsDataGet") {
            // uncomment below to test apiV2CertificatesEnrollmentsDataGet
            //val result : CertificateEnrollmentDataResponse = apiInstance.apiV2CertificatesEnrollmentsDataGet()
            //result shouldBe ("TODO")
        }

        // to test apiV2CertificatesEnrollmentsPost
        should("test apiV2CertificatesEnrollmentsPost") {
            // uncomment below to test apiV2CertificatesEnrollmentsPost
            //val enrollCertificateRequest : EnrollCertificateRequest =  // EnrollCertificateRequest | 
            //val result : EnrollCertificateResponse = apiInstance.apiV2CertificatesEnrollmentsPost(enrollCertificateRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2CertificatesEnrollmentsReferenceNumberGet
        should("test apiV2CertificatesEnrollmentsReferenceNumberGet") {
            // uncomment below to test apiV2CertificatesEnrollmentsReferenceNumberGet
            //val referenceNumber : kotlin.String = referenceNumber_example // kotlin.String | Numer referencyjny wniosku certyfikacyjnego
            //val result : CertificateEnrollmentStatusResponse = apiInstance.apiV2CertificatesEnrollmentsReferenceNumberGet(referenceNumber)
            //result shouldBe ("TODO")
        }

        // to test apiV2CertificatesLimitsGet
        should("test apiV2CertificatesLimitsGet") {
            // uncomment below to test apiV2CertificatesLimitsGet
            //val result : CertificateLimitsResponse = apiInstance.apiV2CertificatesLimitsGet()
            //result shouldBe ("TODO")
        }

        // to test apiV2CertificatesQueryPost
        should("test apiV2CertificatesQueryPost") {
            // uncomment below to test apiV2CertificatesQueryPost
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników
            //val pageOffset : kotlin.Int = 56 // kotlin.Int | Numer strony wyników
            //val queryCertificatesRequest : QueryCertificatesRequest =  // QueryCertificatesRequest | Kryteria filtrowania
            //val result : QueryCertificatesResponse = apiInstance.apiV2CertificatesQueryPost(pageSize, pageOffset, queryCertificatesRequest)
            //result shouldBe ("TODO")
        }

        // to test apiV2CertificatesRetrievePost
        should("test apiV2CertificatesRetrievePost") {
            // uncomment below to test apiV2CertificatesRetrievePost
            //val retrieveCertificatesRequest : RetrieveCertificatesRequest = {"certificateSerialNumbers":["0321C82DA41B4362","0321F21DA462A362"]} // RetrieveCertificatesRequest | 
            //val result : RetrieveCertificatesResponse = apiInstance.apiV2CertificatesRetrievePost(retrieveCertificatesRequest)
            //result shouldBe ("TODO")
        }

    }
}
