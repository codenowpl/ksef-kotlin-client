/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import pl.com.codenow.ksefclient.apis.TokenyKSeFKsefApi
import pl.com.codenow.ksefclient.models.AuthenticationToken
import pl.com.codenow.ksefclient.models.AuthenticationTokenStatus
import pl.com.codenow.ksefclient.models.AuthorIdentifierType
import pl.com.codenow.ksefclient.models.ExceptionResponse
import pl.com.codenow.ksefclient.models.GenerateTokenRequest
import pl.com.codenow.ksefclient.models.GenerateTokenResponse
import pl.com.codenow.ksefclient.models.QueryTokensResponse

class TokenyKSeFKsefApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TokenyKSeFKsefApi
        //val apiInstance = TokenyKSeFKsefApi()

        // to test tokenGenerate
        should("test tokenGenerate") {
            // uncomment below to test tokenGenerate
            //val generateTokenRequest : GenerateTokenRequest =  // GenerateTokenRequest | 
            //val result : GenerateTokenResponse = apiInstance.tokenGenerate(generateTokenRequest)
            //result shouldBe ("TODO")
        }

        // to test tokenQuery
        should("test tokenQuery") {
            // uncomment below to test tokenQuery
            //val status : kotlin.collections.List<AuthenticationTokenStatus> =  // kotlin.collections.List<AuthenticationTokenStatus> | Status tokenów do zwrócenia. W przypadku braku parametru zwracane są wszystkie tokeny. Parametr można przekazać wielokrotnie. | Wartość | Opis | | --- | --- | | Pending | Token został utworzony ale jest jeszcze w trakcie aktywacji i nadawania uprawnień. Nie może być jeszcze wykorzystywany do uwierzytelniania. | | Active | Token jest aktywny i może być wykorzystywany do uwierzytelniania. | | Revoking | Token jest w trakcie unieważniania. Nie może już być wykorzystywany do uwierzytelniania. | | Revoked | Token został unieważniony i nie może być wykorzystywany do uwierzytelniania. | | Failed | Nie udało się aktywować tokena. Należy wygenerować nowy token, obecny nie może być wykorzystywany do uwierzytelniania. | 
            //val description : kotlin.String = description_example // kotlin.String | Umożliwia filtrowanie tokenów po opisie. Wartość parametru jest wyszukiwana w opisie tokena (operacja nie rozróżnia wielkości liter). Należy podać co najmniej 3 znaki.
            //val authorIdentifier : kotlin.String = authorIdentifier_example // kotlin.String | Umożliwia filtrowanie tokenów po ich twórcy. Wartość parametru jest wyszukiwana w identyfikatorze (operacja nie rozróżnia wielkości liter). Należy podać co najmniej 3 znaki.
            //val authorIdentifierType : AuthorIdentifierType =  // AuthorIdentifierType | Umożliwia filtrowanie tokenów po ich twórcy. Wartość parametru określa typ identyfikatora w którym będzie wyszukiwany ciąg znaków przekazany w parametrze `authorIdentifier`. | Wartość | Opis | | --- | --- | | Nip | NIP. | | Pesel | PESEL. | | Fingerprint | Odcisk palca certyfikatu. | 
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Rozmiar strony wyników.
            //val xContinuationToken : kotlin.String = xContinuationToken_example // kotlin.String | Token służący do pobrania kolejnej strony wyników.
            //val result : QueryTokensResponse = apiInstance.tokenQuery(status, description, authorIdentifier, authorIdentifierType, pageSize, xContinuationToken)
            //result shouldBe ("TODO")
        }

        // to test tokenRevoke
        should("test tokenRevoke") {
            // uncomment below to test tokenRevoke
            //val referenceNumber : kotlin.String = referenceNumber_example // kotlin.String | Numer referencyjny tokena do unieważeniania.
            //apiInstance.tokenRevoke(referenceNumber)
        }

        // to test tokenStatus
        should("test tokenStatus") {
            // uncomment below to test tokenStatus
            //val referenceNumber : kotlin.String = referenceNumber_example // kotlin.String | Numer referencyjny tokena.
            //val result : AuthenticationToken = apiInstance.tokenStatus(referenceNumber)
            //result shouldBe ("TODO")
        }

    }
}
