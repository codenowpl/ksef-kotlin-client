/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import pl.com.codenow.ksefclient.models.CurrencyCode
import pl.com.codenow.ksefclient.models.InvoiceQueryAmount
import pl.com.codenow.ksefclient.models.InvoiceQueryBuyer
import pl.com.codenow.ksefclient.models.InvoiceQueryDateRange
import pl.com.codenow.ksefclient.models.InvoiceQueryFormType
import pl.com.codenow.ksefclient.models.InvoiceQuerySeller
import pl.com.codenow.ksefclient.models.InvoiceQuerySubjectType
import pl.com.codenow.ksefclient.models.InvoiceType
import pl.com.codenow.ksefclient.models.InvoicingMode

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param subjectType Typ podmiotu, którego dotyczą kryteria filtrowania metadanych faktur. Określa kontekst, w jakim przeszukiwane są dane. | Wartość | Opis | | --- | --- | | Subject1 | Podmiot 1 | | Subject2 | Podmiot 2 | | Subject3 | Podmiot 3 | | SubjectAuthorized | Podmiot upoważniony | 
 * @param dateRange Typ i zakres dat, według którego mają być filtrowane faktury. Dozwolony maksymalny okres wynosi 2 lata.
 * @param ksefNumber Numer KSeF faktury.
 * @param invoiceNumber Numer faktury nadany przez wystawcę.
 * @param amount Filtr kwotowy – brutto, netto lub VAT (z wartością).
 * @param seller Dane sprzedawcy.
 * @param buyer Dane nabywcy.
 * @param currencyCodes Kody walut.
 * @param invoicingMode Tryb wystawienia faktury: online lub offline.
 * @param isSelfInvoicing Czy faktura została wystawiona w trybie samofakturowania.
 * @param formType Typ dokumentu. | Wartość | Opis | | --- | --- | | FA | Faktura VAT | | PEF | Faktura PEF | | RR | Faktura RR | 
 * @param invoiceTypes Rodzaje faktur. | Wartość | Opis | | --- | --- | | Vat | (FA) Podstawowa | | Zal | (FA) Zaliczkowa | | Kor | (FA) Korygująca | | Roz | (FA) Rozliczeniowa | | Upr | (FA) Uproszczona | | KorZal | (FA) Korygująca fakturę zaliczkową | | KorRoz | (FA) Korygująca fakturę rozliczeniową | | VatPef | (PEF) Podstawowowa | | VatPefSp | (PEF) Specjalizowana | | KorPef | (PEF) Korygująca | | VatRr | (RR) Podstawowa | | KorVatRr | (RR) Korygująca | 
 * @param hasAttachment Czy faktura ma załącznik.
 */


data class InvoiceQueryFilters (

    /* Typ podmiotu, którego dotyczą kryteria filtrowania metadanych faktur. Określa kontekst, w jakim przeszukiwane są dane. | Wartość | Opis | | --- | --- | | Subject1 | Podmiot 1 | | Subject2 | Podmiot 2 | | Subject3 | Podmiot 3 | | SubjectAuthorized | Podmiot upoważniony |  */
    @Json(name = "subjectType")
    val subjectType: InvoiceQuerySubjectType,

    /* Typ i zakres dat, według którego mają być filtrowane faktury. Dozwolony maksymalny okres wynosi 2 lata. */
    @Json(name = "dateRange")
    val dateRange: InvoiceQueryDateRange,

    /* Numer KSeF faktury. */
    @Json(name = "ksefNumber")
    val ksefNumber: kotlin.String? = null,

    /* Numer faktury nadany przez wystawcę. */
    @Json(name = "invoiceNumber")
    val invoiceNumber: kotlin.String? = null,

    /* Filtr kwotowy – brutto, netto lub VAT (z wartością). */
    @Json(name = "amount")
    val amount: InvoiceQueryAmount? = null,

    /* Dane sprzedawcy. */
    @Json(name = "seller")
    val seller: InvoiceQuerySeller? = null,

    /* Dane nabywcy. */
    @Json(name = "buyer")
    val buyer: InvoiceQueryBuyer? = null,

    /* Kody walut. */
    @Json(name = "currencyCodes")
    val currencyCodes: kotlin.collections.List<CurrencyCode>? = null,

    /* Tryb wystawienia faktury: online lub offline. */
    @Json(name = "invoicingMode")
    val invoicingMode: InvoicingMode? = null,

    /* Czy faktura została wystawiona w trybie samofakturowania. */
    @Json(name = "isSelfInvoicing")
    val isSelfInvoicing: kotlin.Boolean? = null,

    /* Typ dokumentu. | Wartość | Opis | | --- | --- | | FA | Faktura VAT | | PEF | Faktura PEF | | RR | Faktura RR |  */
    @Json(name = "formType")
    val formType: InvoiceQueryFormType? = null,

    /* Rodzaje faktur. | Wartość | Opis | | --- | --- | | Vat | (FA) Podstawowa | | Zal | (FA) Zaliczkowa | | Kor | (FA) Korygująca | | Roz | (FA) Rozliczeniowa | | Upr | (FA) Uproszczona | | KorZal | (FA) Korygująca fakturę zaliczkową | | KorRoz | (FA) Korygująca fakturę rozliczeniową | | VatPef | (PEF) Podstawowowa | | VatPefSp | (PEF) Specjalizowana | | KorPef | (PEF) Korygująca | | VatRr | (RR) Podstawowa | | KorVatRr | (RR) Korygująca |  */
    @Json(name = "invoiceTypes")
    val invoiceTypes: kotlin.collections.List<InvoiceType>? = null,

    /* Czy faktura ma załącznik. */
    @Json(name = "hasAttachment")
    val hasAttachment: kotlin.Boolean? = null

) {


}

