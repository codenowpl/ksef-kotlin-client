/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package pl.com.codenow.ksefclient.models

import pl.com.codenow.ksefclient.models.FormCode
import pl.com.codenow.ksefclient.models.InvoiceMetadataAuthorizedSubject
import pl.com.codenow.ksefclient.models.InvoiceMetadataBuyer
import pl.com.codenow.ksefclient.models.InvoiceMetadataSeller
import pl.com.codenow.ksefclient.models.InvoiceMetadataThirdSubject
import pl.com.codenow.ksefclient.models.InvoiceType
import pl.com.codenow.ksefclient.models.InvoicingMode

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param ksefNumber Numer KSeF faktury.
 * @param invoiceNumber Numer faktury nadany przez wystawcę.
 * @param issueDate Data wystawienia faktury.
 * @param invoicingDate Data przyjęcia faktury w systemie KSeF (do dalszego przetwarzania).
 * @param acquisitionDate Data nadania numeru KSeF.
 * @param permanentStorageDate Data trwałego zapisu faktury w repozytorium systemu KSeF.
 * @param seller Dane identyfikujące sprzedawcę.
 * @param buyer Dane identyfikujące nabywcę.
 * @param netAmount Łączna kwota netto.
 * @param grossAmount Łączna kwota brutto.
 * @param vatAmount Łączna kwota VAT.
 * @param currency Kod waluty.
 * @param invoicingMode Tryb fakturowania (online/offline).
 * @param invoiceType Rodzaj faktury. | Wartość | Opis | | --- | --- | | Vat | (FA) Podstawowa | | Zal | (FA) Zaliczkowa | | Kor | (FA) Korygująca | | Roz | (FA) Rozliczeniowa | | Upr | (FA) Uproszczona | | KorZal | (FA) Korygująca fakturę zaliczkową | | KorRoz | (FA) Korygująca fakturę rozliczeniową | | VatPef | (PEF) Podstawowowa | | VatPefSp | (PEF) Specjalizowana | | KorPef | (PEF) Korygująca | | VatRr | (RR) Podstawowa | | KorVatRr | (RR) Korygująca | 
 * @param formCode Struktura dokumentu faktury.  Obsługiwane schematy: | SystemCode | SchemaVersion | Value | | --- | --- | --- | | FA (2) | 1-0E | FA | | FA (3) | 1-0E | FA | | FA_PEF (3) | 2-1 | FA_PEF | | FA_KOR_PEF (3) | 2-1 | FA_PEF | 
 * @param isSelfInvoicing Czy faktura została wystawiona w trybie samofakturowania.
 * @param hasAttachment Czy faktura posiada załącznik.
 * @param invoiceHash Skrót SHA256 faktury.
 * @param hashOfCorrectedInvoice Skrót SHA256 korygowanej faktury.
 * @param thirdSubjects Lista podmiotów trzecich.
 * @param authorizedSubject Podmiot upoważniony.
 */


data class InvoiceMetadata (

    /* Numer KSeF faktury. */
    @Json(name = "ksefNumber")
    val ksefNumber: kotlin.String,

    /* Numer faktury nadany przez wystawcę. */
    @Json(name = "invoiceNumber")
    val invoiceNumber: kotlin.String,

    /* Data wystawienia faktury. */
    @Json(name = "issueDate")
    val issueDate: java.time.LocalDate,

    /* Data przyjęcia faktury w systemie KSeF (do dalszego przetwarzania). */
    @Json(name = "invoicingDate")
    val invoicingDate: java.time.LocalDateTime,

    /* Data nadania numeru KSeF. */
    @Json(name = "acquisitionDate")
    val acquisitionDate: java.time.LocalDateTime,

    /* Data trwałego zapisu faktury w repozytorium systemu KSeF. */
    @Json(name = "permanentStorageDate")
    val permanentStorageDate: java.time.LocalDateTime,

    /* Dane identyfikujące sprzedawcę. */
    @Json(name = "seller")
    val seller: InvoiceMetadataSeller,

    /* Dane identyfikujące nabywcę. */
    @Json(name = "buyer")
    val buyer: InvoiceMetadataBuyer,

    /* Łączna kwota netto. */
    @Json(name = "netAmount")
    val netAmount: kotlin.Double,

    /* Łączna kwota brutto. */
    @Json(name = "grossAmount")
    val grossAmount: kotlin.Double,

    /* Łączna kwota VAT. */
    @Json(name = "vatAmount")
    val vatAmount: kotlin.Double,

    /* Kod waluty. */
    @Json(name = "currency")
    val currency: kotlin.String,

    /* Tryb fakturowania (online/offline). */
    @Json(name = "invoicingMode")
    val invoicingMode: InvoicingMode,

    /* Rodzaj faktury. | Wartość | Opis | | --- | --- | | Vat | (FA) Podstawowa | | Zal | (FA) Zaliczkowa | | Kor | (FA) Korygująca | | Roz | (FA) Rozliczeniowa | | Upr | (FA) Uproszczona | | KorZal | (FA) Korygująca fakturę zaliczkową | | KorRoz | (FA) Korygująca fakturę rozliczeniową | | VatPef | (PEF) Podstawowowa | | VatPefSp | (PEF) Specjalizowana | | KorPef | (PEF) Korygująca | | VatRr | (RR) Podstawowa | | KorVatRr | (RR) Korygująca |  */
    @Json(name = "invoiceType")
    val invoiceType: InvoiceType,

    /* Struktura dokumentu faktury.  Obsługiwane schematy: | SystemCode | SchemaVersion | Value | | --- | --- | --- | | FA (2) | 1-0E | FA | | FA (3) | 1-0E | FA | | FA_PEF (3) | 2-1 | FA_PEF | | FA_KOR_PEF (3) | 2-1 | FA_PEF |  */
    @Json(name = "formCode")
    val formCode: FormCode,

    /* Czy faktura została wystawiona w trybie samofakturowania. */
    @Json(name = "isSelfInvoicing")
    val isSelfInvoicing: kotlin.Boolean,

    /* Czy faktura posiada załącznik. */
    @Json(name = "hasAttachment")
    val hasAttachment: kotlin.Boolean,

    /* Skrót SHA256 faktury. */
    @Json(name = "invoiceHash")
    val invoiceHash: kotlin.String,

    /* Skrót SHA256 korygowanej faktury. */
    @Json(name = "hashOfCorrectedInvoice")
    val hashOfCorrectedInvoice: kotlin.String? = null,

    /* Lista podmiotów trzecich. */
    @Json(name = "thirdSubjects")
    val thirdSubjects: kotlin.collections.List<InvoiceMetadataThirdSubject>? = null,

    /* Podmiot upoważniony. */
    @Json(name = "authorizedSubject")
    val authorizedSubject: InvoiceMetadataAuthorizedSubject? = null

) {


}

